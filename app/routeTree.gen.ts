/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RootlayoutImport } from './routes/_rootlayout'
import { Route as AuthlayoutImport } from './routes/_authlayout'
import { Route as RootlayoutIndexImport } from './routes/_rootlayout/index'
import { Route as AuthlayoutSignInIndexImport } from './routes/_authlayout/sign-in/index'

// Create/Update Routes

const RootlayoutRoute = RootlayoutImport.update({
  id: '/_rootlayout',
  getParentRoute: () => rootRoute,
} as any)

const AuthlayoutRoute = AuthlayoutImport.update({
  id: '/_authlayout',
  getParentRoute: () => rootRoute,
} as any)

const RootlayoutIndexRoute = RootlayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RootlayoutRoute,
} as any)

const AuthlayoutSignInIndexRoute = AuthlayoutSignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthlayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authlayout': {
      id: '/_authlayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_rootlayout': {
      id: '/_rootlayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof RootlayoutImport
      parentRoute: typeof rootRoute
    }
    '/_rootlayout/': {
      id: '/_rootlayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RootlayoutIndexImport
      parentRoute: typeof RootlayoutImport
    }
    '/_authlayout/sign-in/': {
      id: '/_authlayout/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthlayoutSignInIndexImport
      parentRoute: typeof AuthlayoutImport
    }
  }
}

// Create and export the route tree

interface AuthlayoutRouteChildren {
  AuthlayoutSignInIndexRoute: typeof AuthlayoutSignInIndexRoute
}

const AuthlayoutRouteChildren: AuthlayoutRouteChildren = {
  AuthlayoutSignInIndexRoute: AuthlayoutSignInIndexRoute,
}

const AuthlayoutRouteWithChildren = AuthlayoutRoute._addFileChildren(
  AuthlayoutRouteChildren,
)

interface RootlayoutRouteChildren {
  RootlayoutIndexRoute: typeof RootlayoutIndexRoute
}

const RootlayoutRouteChildren: RootlayoutRouteChildren = {
  RootlayoutIndexRoute: RootlayoutIndexRoute,
}

const RootlayoutRouteWithChildren = RootlayoutRoute._addFileChildren(
  RootlayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof RootlayoutRouteWithChildren
  '/': typeof RootlayoutIndexRoute
  '/sign-in': typeof AuthlayoutSignInIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthlayoutRouteWithChildren
  '/': typeof RootlayoutIndexRoute
  '/sign-in': typeof AuthlayoutSignInIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authlayout': typeof AuthlayoutRouteWithChildren
  '/_rootlayout': typeof RootlayoutRouteWithChildren
  '/_rootlayout/': typeof RootlayoutIndexRoute
  '/_authlayout/sign-in/': typeof AuthlayoutSignInIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/sign-in'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/sign-in'
  id:
    | '__root__'
    | '/_authlayout'
    | '/_rootlayout'
    | '/_rootlayout/'
    | '/_authlayout/sign-in/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthlayoutRoute: typeof AuthlayoutRouteWithChildren
  RootlayoutRoute: typeof RootlayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthlayoutRoute: AuthlayoutRouteWithChildren,
  RootlayoutRoute: RootlayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authlayout",
        "/_rootlayout"
      ]
    },
    "/_authlayout": {
      "filePath": "_authlayout.tsx",
      "children": [
        "/_authlayout/sign-in/"
      ]
    },
    "/_rootlayout": {
      "filePath": "_rootlayout.tsx",
      "children": [
        "/_rootlayout/"
      ]
    },
    "/_rootlayout/": {
      "filePath": "_rootlayout/index.tsx",
      "parent": "/_rootlayout"
    },
    "/_authlayout/sign-in/": {
      "filePath": "_authlayout/sign-in/index.tsx",
      "parent": "/_authlayout"
    }
  }
}
ROUTE_MANIFEST_END */
